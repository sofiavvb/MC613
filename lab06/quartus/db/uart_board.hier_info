|uart_tb


|uart_tb|uart:uart_inst
clk => clk.IN3
rst => rst.IN1
send => send.IN1
tx_data[0] => tx_data[0].IN1
tx_data[1] => tx_data[1].IN1
tx_data[2] => tx_data[2].IN1
tx_data[3] => tx_data[3].IN1
tx_data[4] => tx_data[4].IN1
tx_data[5] => tx_data[5].IN1
tx_data[6] => tx_data[6].IN1
tx_data[7] => tx_data[7].IN1
rx => rx.IN1
tx <= tx:tx_inst.tx
rx_data[0] <= rx:rx_inst.data_out
rx_data[1] <= rx:rx_inst.data_out
rx_data[2] <= rx:rx_inst.data_out
rx_data[3] <= rx:rx_inst.data_out
rx_data[4] <= rx:rx_inst.data_out
rx_data[5] <= rx:rx_inst.data_out
rx_data[6] <= rx:rx_inst.data_out
rx_data[7] <= rx:rx_inst.data_out
tx_busy <= tx:tx_inst.busy
rx_done <= rx:rx_inst.done


|uart_tb|uart:uart_inst|div_clock:clock_inst
clk => pulse~reg0.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
rst => pulse~reg0.ACLR
rst => counter[0].ACLR
rst => counter[1].ACLR
rst => counter[2].ACLR
rst => counter[3].ACLR
rst => counter[4].ACLR
rst => counter[5].ACLR
rst => counter[6].ACLR
rst => counter[7].ACLR
rst => counter[8].ACLR
rst => counter[9].ACLR
rst => counter[10].ACLR
rst => counter[11].ACLR
rst => counter[12].ACLR
pulse <= pulse~reg0.DB_MAX_OUTPUT_PORT_TYPE


|uart_tb|uart:uart_inst|tx:tx_inst
clk => tx~reg0.CLK
clk => busy~reg0.CLK
clk => sending.CLK
clk => bit_cnt[0].CLK
clk => bit_cnt[1].CLK
clk => bit_cnt[2].CLK
clk => bit_cnt[3].CLK
clk => shift_reg[0].CLK
clk => shift_reg[1].CLK
clk => shift_reg[2].CLK
clk => shift_reg[3].CLK
clk => shift_reg[4].CLK
clk => shift_reg[5].CLK
clk => shift_reg[6].CLK
clk => shift_reg[7].CLK
clk => shift_reg[8].CLK
clk => shift_reg[9].CLK
tick => always0.IN1
send => always0.IN1
data_in[0] => WideXnor0.IN0
data_in[0] => shift_reg.DATAB
data_in[1] => WideXnor0.IN1
data_in[1] => shift_reg.DATAB
data_in[2] => WideXnor0.IN2
data_in[2] => shift_reg.DATAB
data_in[3] => WideXnor0.IN3
data_in[3] => shift_reg.DATAB
data_in[4] => WideXnor0.IN4
data_in[4] => shift_reg.DATAB
data_in[5] => WideXnor0.IN5
data_in[5] => shift_reg.DATAB
data_in[6] => WideXnor0.IN6
data_in[6] => shift_reg.DATAB
data_in[7] => WideXnor0.IN7
data_in[7] => shift_reg.DATAB
tx <= tx~reg0.DB_MAX_OUTPUT_PORT_TYPE
busy <= busy~reg0.DB_MAX_OUTPUT_PORT_TYPE


|uart_tb|uart:uart_inst|rx:rx_inst
clk => data_out[0]~reg0.CLK
clk => data_out[1]~reg0.CLK
clk => data_out[2]~reg0.CLK
clk => data_out[3]~reg0.CLK
clk => data_out[4]~reg0.CLK
clk => data_out[5]~reg0.CLK
clk => data_out[6]~reg0.CLK
clk => data_out[7]~reg0.CLK
clk => shift_reg[0].CLK
clk => shift_reg[1].CLK
clk => shift_reg[2].CLK
clk => shift_reg[3].CLK
clk => shift_reg[4].CLK
clk => shift_reg[5].CLK
clk => shift_reg[6].CLK
clk => shift_reg[7].CLK
clk => shift_reg[8].CLK
clk => done~reg0.CLK
clk => bit_cnt[0].CLK
clk => bit_cnt[1].CLK
clk => bit_cnt[2].CLK
clk => bit_cnt[3].CLK
clk => receiving.CLK
tick => always0.IN1
rx => shift_reg.DATAB
rx => always0.IN1
data_out[0] <= data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
done <= done~reg0.DB_MAX_OUTPUT_PORT_TYPE


