$date
	Wed Mar 26 17:16:09 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module alu_tb $end
$var wire 1 ! Zero $end
$var wire 32 " R [31:0] $end
$var wire 1 # Overflow $end
$var wire 1 $ Cout $end
$var reg 32 % A [31:0] $end
$var reg 2 & ALUCtl [1:0] $end
$var reg 32 ' B [31:0] $end
$scope module alu_inst $end
$var wire 32 ( A [31:0] $end
$var wire 2 ) ALUCtl [1:0] $end
$var wire 32 * B [31:0] $end
$var wire 1 # Overflow $end
$var wire 32 + sinalb [31:0] $end
$var wire 1 ! Zero $end
$var reg 1 $ Cout $end
$var reg 32 , R [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 ,
b1111000011110000111100001111 +
b1111000011110000111100001111 *
b0 )
b11110000111100001111000011110000 (
b1111000011110000111100001111 '
b0 &
b11110000111100001111000011110000 %
0$
0#
b0 "
1!
$end
#10
b11110000111100001111000011110000 +
0!
b11111111111111111111111111111111 "
b11111111111111111111111111111111 ,
b10 &
b10 )
#20
b1 +
b10 "
b10 ,
b1 &
b1 )
b1 '
b1 *
b1 %
b1 (
#30
1#
b10000000000000000000000000000000 "
b10000000000000000000000000000000 ,
b1111111111111111111111111111111 %
b1111111111111111111111111111111 (
#40
0#
1$
1!
b0 "
b0 ,
b11111111111111111111111111111111 %
b11111111111111111111111111111111 (
#50
b11111111111111111111111111111100 +
0!
b10 "
b10 ,
0$
b11 &
b11 )
b11 '
b11 *
b101 %
b101 (
#60
1#
b11111111111111111111111111111110 +
b1111111111111111111111111111111 "
b1111111111111111111111111111111 ,
b1 '
b1 *
b10000000000000000000000000000000 %
b10000000000000000000000000000000 (
#70
